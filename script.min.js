document.addEventListener("DOMContentLoaded",(function(){fetch("/api/ptable",{headers:{"X-Requested-With":"XMLHttpRequest"}}).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e.json()})).then((e=>{let t=96485,n=e;function l(e,t){if(t<e.length&&/[A-Z]/.test(e[t])){let n=e[t];return++t<e.length&&/[a-z]/.test(e[t])&&(n+=e[t],t++),[n,t]}throw new Error("Invalid element at position "+t)}function o(e,t){let n=0;for(;t<e.length&&/[0-9]/.test(e[t]);)n=10*n+parseInt(e[t]),t++;return[n>0?n:1,t]}function s(e){let t,n={},l=/([A-Z][a-z]*)(\d*)/g,o=0;for(;null!==(t=l.exec(e));){let s=t[1],a=t[2]?parseInt(t[2]):1;if(n[s])throw new Error(`Oops, ${s} shows up twice in ${e}`);n[s]=a,o=l.lastIndex}if(o!==e.length)throw new Error(`Bad formula: ${e}`);return n}function a(e){document.getElementById("balance-result").innerHTML="Balancing...";let{reactants:t,products:n}=function(e){let t=e.split("->").map((e=>e.trim()));if(2!==t.length)throw new Error('Equation format is off, use "->" between sides');return{reactants:t[0].split("+").map((e=>e.trim())),products:t[1].split("+").map((e=>e.trim()))}}(e),l=[...t,...n],o=l.map(s),a=Array.from(o.reduce(((e,t)=>(Object.keys(t).forEach((t=>e.add(t))),e)),new Set));function r(e,t){return t?r(t,e%t):e}class i{constructor(e,t){this.n=e,this.d=t,this.normalize()}normalize(){this.d<0&&(this.n=-this.n,this.d=-this.d);let e=r(Math.abs(this.n),Math.abs(this.d));this.n/=e,this.d/=e}add(e){return new i(this.n*e.d+e.n*this.d,this.d*e.d)}sub(e){return new i(this.n*e.d-e.n*this.d,this.d*e.d)}mul(e){return new i(this.n*e.n,this.d*e.d)}div(e){return new i(this.n*e.d,this.d*e.n)}}let u=l.length,d=a.length,m=a.map((e=>o.map(((n,l)=>(l<t.length?1:-1)*(n[e]||0))))),c=u-1,p=d,f=Array.from({length:p},((e,t)=>{let n=[];for(let e=0;e<c;e++)n.push(new i(m[t][e],1));return n.push(new i(-m[t][u-1],1)),n})),b=0;for(let e=0;e<c&&b<p;e++){let t=b;for(;t<p&&0==f[t][e].n;)t++;if(t==p)continue;[f[b],f[t]]=[f[t],f[b]];let n=new i(f[b][e].d,f[b][e].n);for(let t=e;t<=c;t++)f[b][t]=f[b][t].mul(n);for(let t=0;t<p;t++)if(t!==b&&0!==f[t][e].n){let n=f[t][e];for(let l=e;l<=c;l++)f[t][l]=f[t][l].sub(n.mul(f[b][l]))}b++}let g=Array(u);for(let e=0;e<c;e++){let t=new i(0,1);for(let n=0;n<p;n++)if(1==f[n][e].n&&1==f[n][e].d){t=f[n][c];break}g[e]=t}g[u-1]=new i(1,1);let E=g.map((e=>e.d)).reduce(((e,t)=>function(e,t){return e/r(e,t)*t}(e,t)),1),y=g.map((e=>e.n*(E/e.d)));y=y.map((e=>Math.round(e))),y.some((e=>e<0))&&(y=y.map((e=>-e)));let h=y.reduce(((e,t)=>r(e,t)),y[0]);if(y=y.map((e=>e/h)),y.some((e=>Math.abs(e)>1250)))throw new Error("No solution found with coefficients up to 1250");return`${t.map(((e,t)=>(1==y[t]?"":y[t])+e)).join(" + ")} -> ${n.map(((e,n)=>(1==y[n+t.length]?"":y[n+t.length])+e)).join(" + ")}`}function r(e){let t=(e=e.replace(/\s+/g,"")).split("->");if(2!==t.length)throw new Error('Invalid equation format: missing "->"');return{reactants:t[0].split("+").map(i),products:t[1].split("+").map(i)}}function i(e){let t=e.match(/^(\d+)?(.+)$/);if(!t)throw new Error("Invalid term: "+e);let n=t[1]?parseInt(t[1]):1;return{formula:t[2],coefficient:n}}function u(e){if(e.some(isNaN))throw new Error("Please fill all required fields with valid numbers")}document.getElementById("element-input").addEventListener("keyup",(function(){let e=document.getElementById("element-input").value.trim().toLowerCase(),t=n.find((t=>t.symbol.toLowerCase()==e||t.name.toLowerCase()==e));if(t){let e=`<p><strong>Symbol:</strong> ${t.symbol}</p><p><strong>Name:</strong> ${t.name}</p><p><strong>Atomic Mass:</strong> ${t.atomicMass} u</p><p><strong>Atomic Number:</strong> ${t.atomicNumber}</p><p><strong>Electronegativity:</strong> ${null!==t.electronegativity?t.electronegativity:"N/A"}</p><p><strong>Electron Affinity:</strong> ${null!==t.electronAffinity?t.electronAffinity:"N/A"} kJ/mol</p><p><strong>Atomic Radius:</strong> ${null!==t.atomicRadius?t.atomicRadius:"N/A"} pm</p><p><strong>Ionization Energy:</strong> ${null!==t.ionizationEnergy?t.ionizationEnergy:"N/A"} kJ/mol</p><p><strong>Valence Electrons:</strong> ${t.valenceElectrons}</p><p><strong>Total Electrons:</strong> ${t.totalElectrons}</p><p><strong>Group:</strong> ${t.group}</p><p><strong>Period:</strong> ${t.period}</p><p><strong>Type:</strong> ${t.type}</p>`;document.getElementById("element-info").innerHTML=e}else document.getElementById("element-info").innerHTML="<p>Element not found</p>"})),document.getElementById("formula-input").addEventListener("keyup",(function(){let e=document.getElementById("formula-input").value.trim();if(""!=e)try{let t=function(e,t){let n=[0],s=0;for(;s<e.length;)if(/[A-Z]/.test(e[s])){let[a,r]=l(e,s);s=r;let[i,u]=o(e,s);s=u;let d=t.find((e=>e.symbol==a));if(!d)throw new Error("Element not found: "+a);n[n.length-1]+=d.atomicMass*i}else if("("==e[s])n.push(0),s++;else{if(")"!=e[s])throw new Error("Invalid character: "+e[s]);{if(n.length<2)throw new Error('Unmatched ")"');let t=n.pop(),[l,a]=o(e,s+1);s=a,n[n.length-1]+=t*l}}if(n.length>1)throw new Error('Unmatched "("');return n[0]}(e,n);document.getElementById("mass-result").innerHTML=`<p>Molar Mass: ${t.toFixed(2)} g/mol</p>`}catch(e){document.getElementById("mass-result").innerHTML=`<p>${e.message}</p>`}else document.getElementById("mass-result").innerHTML="<p>Please enter a chemical formula</p>"})),document.getElementById("balance-button").addEventListener("click",(function(){let e=document.getElementById("equation-input").value.trim();if(""!=e)try{let t=a(e);document.getElementById("balance-result").innerHTML=`<p>Balanced Equation: ${t}</p>`}catch(e){document.getElementById("balance-result").innerHTML=`<p>${e.message}</p>`}else document.getElementById("balance-result").innerHTML="<p>Please enter a chemical equation</p>"})),document.getElementById("calculation-type").addEventListener("change",(function(){let e=this.value,t=document.getElementById("stoich-equation-input").value.trim();if(""!=t)try{let n=r(t),l=document.getElementById("stoich-inputs");if(l.innerHTML="","product-from-reactant"==e){let e=`<select id="reactant-select">${n.reactants.map((e=>`<option value="${e.formula}">${e.formula}</option>`)).join("")}</select>`,t='<input type="number" id="reactant-moles" placeholder="Moles of reactant" min="0" step="any">',o=`<select id="product-select">${n.products.map((e=>`<option value="${e.formula}">${e.formula}</option>`)).join("")}</select>`;l.innerHTML=`<p>Select reactant: ${e}</p><p>Enter moles: ${t}</p><p>Select product: ${o}</p>`}else if("reactant-from-product"==e){let e=`<select id="product-select">${n.products.map((e=>`<option value="${e.formula}">${e.formula}</option>`)).join("")}</select>`,t='<input type="number" id="product-moles" placeholder="Moles of product" min="0" step="any">',o=`<select id="reactant-select">${n.reactants.map((e=>`<option value="${e.formula}">${e.formula}</option>`)).join("")}</select>`;l.innerHTML=`<p>Select product: ${e}</p><p>Enter moles: ${t}</p><p>Select reactant: ${o}</p>`}else if("limiting-reactant"==e){let e=n.reactants.map((e=>`<p>${e.formula}: <input type="number" id="moles-${e.formula}" placeholder="Moles of ${e.formula}" min="0" step="any"></p>`)).join(""),t=`<select id="product-select">${n.products.map((e=>`<option value="${e.formula}">${e.formula}</option>`)).join("")}</select>`;l.innerHTML=e+`<p>Select product to calculate: ${t}</p>`}}catch(e){document.getElementById("stoich-inputs").innerHTML=`<p>Error parsing equation: ${e.message}</p>`}else document.getElementById("stoich-inputs").innerHTML="<p>Please enter a balanced chemical equation.</p>"})),document.getElementById("calculate-stoich-button").addEventListener("click",(function(){let e=document.getElementById("calculation-type").value,t=document.getElementById("stoich-equation-input").value.trim();if(""!=t)try{let n=r(t);if("product-from-reactant"==e){let e=document.getElementById("reactant-select").value,t=parseFloat(document.getElementById("reactant-moles").value),l=document.getElementById("product-select").value;if(isNaN(t)||t<=0)throw new Error("Invalid moles input");let o=n.reactants.find((t=>t.formula==e)),s=n.products.find((e=>e.formula==l));if(!o||!s)throw new Error("Selected compound not found");let a=t/o.coefficient*s.coefficient;document.getElementById("stoich-result").innerHTML=`<p>Moles of ${l}: ${a.toFixed(2)}</p>`}else if("reactant-from-product"==e){let e=document.getElementById("product-select").value,t=parseFloat(document.getElementById("product-moles").value),l=document.getElementById("reactant-select").value;if(isNaN(t)||t<=0)throw new Error("Invalid moles input");let o=n.products.find((t=>t.formula==e)),s=n.reactants.find((e=>e.formula==l));if(!o||!s)throw new Error("Selected compound not found");let a=t/o.coefficient*s.coefficient;document.getElementById("stoich-result").innerHTML=`<p>Moles of ${l}: ${a.toFixed(2)}</p>`}else if("limiting-reactant"==e){let e={};for(let t of n.reactants){let n=parseFloat(document.getElementById(`moles-${t.formula}`).value);if(isNaN(n)||n<=0)throw new Error(`Invalid moles for ${t.formula}`);e[t.formula]=n}let t=document.getElementById("product-select").value,l=n.products.find((e=>e.formula==t));if(!l)throw new Error("Selected product not found");let o=1/0,s=null;for(let t of n.reactants){let n=e[t.formula]/t.coefficient;n<o&&(o=n,s=t.formula)}let a=o*l.coefficient;document.getElementById("stoich-result").innerHTML=`<p>Limiting reactant: ${s}</p><p>Moles of ${t}: ${a.toFixed(2)}</p>`}}catch(e){document.getElementById("stoich-result").innerHTML=`<p>Error: ${e.message}</p>`}else document.getElementById("stoich-result").innerHTML="<p>Please enter a balanced chemical equation.</p>"})),document.getElementById("calculate-dilution").addEventListener("click",(function(){try{let e,t,n=document.getElementById("dilution-solve-for").value,l=parseFloat(document.getElementById("dilution-M1").value),o=parseFloat(document.getElementById("dilution-V1").value),s=parseFloat(document.getElementById("dilution-M2").value),a=parseFloat(document.getElementById("dilution-V2").value);switch(n){case"M1":u([o,s,a]),e=s*a/o,t="M<sub>1</sub>=(M<sub>2</sub> x V<sub>2</sub>)/V<sub>1</sub>";break;case"V1":u([l,s,a]),e=s*a/l,t="V<sub>1</sub>=(M<sub>2</sub> x V<sub>2</sub>)/M<sub>1</sub>";break;case"M2":u([l,o,a]),e=l*o/a,t="M<sub>2</sub>=(M<sub>1</sub> x V<sub>1</sub>)/V<sub>2</sub>";break;case"V2":u([l,o,s]),e=l*o/s,t="V<sub>2</sub>=(M<sub>1</sub> x V<sub>1</sub>)/M<sub>2</sub>";break;default:throw new Error("Invalid calculation type")}document.getElementById("dilution-result").innerHTML=`<p>${t}</p><p>Result: ${e.toFixed(4)} ${n.startsWith("M")?"M":"L"}</p>`}catch(e){document.getElementById("dilution-result").innerHTML=`<p>Error: ${e.message}</p>`}})),document.getElementById("calculate-mass-percent").addEventListener("click",(function(){try{let e=parseFloat(document.getElementById("mass-solute").value),t=parseFloat(document.getElementById("mass-solution").value),n=document.getElementById("concentration-unit").value;if(u([e,t]),0==t)throw new Error("Solution mass cannot be zero");let l,o,s=e/t;switch(n){case"percent":l=100*s,o="%";break;case"ppm":l=1e6*s,o="ppm";break;case"ppb":l=1e9*s,o="ppb";break;default:throw new Error("Invalid unit")}document.getElementById("mass-percent-result").innerHTML=`<p>Concentration: ${l.toFixed(4)} ${o}</p>`}catch(e){document.getElementById("mass-percent-result").innerHTML=`<p>Error: ${e.message}</p>`}})),document.getElementById("calculate-mixing").addEventListener("click",(function(){try{let e=parseFloat(document.getElementById("mix-C1").value),t=parseFloat(document.getElementById("mix-V1").value),n=parseFloat(document.getElementById("mix-C2").value),l=parseFloat(document.getElementById("mix-V2").value);if(u([e,t,n,l]),t+l==0)throw new Error("Total volume cannot be zero");let o=t+l,s=(e*t+n*l)/o;document.getElementById("mixing-result").innerHTML=`<p>Final Concentration: ${s.toFixed(4)} M</p><p>Total Volume: ${o.toFixed(4)} L</p>`}catch(e){document.getElementById("mixing-result").innerHTML=`<p>Error: ${e.message}</p>`}})),document.getElementById("calculate-ideal").addEventListener("click",(function(){try{let e,t,n=document.getElementById("ideal-solve-for").value,l=document.getElementById("ideal-R-units").value,o="atm-L"==l?.0821:8.314,s=parseFloat(document.getElementById("ideal-P").value),a=parseFloat(document.getElementById("ideal-V").value),r=parseFloat(document.getElementById("ideal-n").value),i=parseFloat(document.getElementById("ideal-T").value);if("P"==n){if(isNaN(a)||isNaN(r)||isNaN(i))throw new Error("Please provide V, n, T");e=r*o*i/a,t="P=(nRT)/V"}else if("V"==n){if(isNaN(s)||isNaN(r)||isNaN(i))throw new Error("Please provide P, n, T");e=r*o*i/s,t="V=(nRT)/P"}else if("n"==n){if(isNaN(s)||isNaN(a)||isNaN(i))throw new Error("Please provide P, V, T");e=s*a/(o*i),t="n=(PV)/(RT)"}else if("T"==n){if(isNaN(s)||isNaN(a)||isNaN(r))throw new Error("Please provide P, V, n");e=s*a/(r*o),t="T=(PV)/(nR)"}let u="P"==n?"atm-L"==l?"atm":"Pa":"V"==n?"atm-L"==l?"L":"m³":"n"==n?"mol":"K";document.getElementById("ideal-result").innerHTML=`<p>${t}</p><p>Result: ${e.toFixed(4)} ${u}</p>`}catch(e){document.getElementById("ideal-result").innerHTML=`<p>Error: ${e.message}</p>`}})),document.getElementById("calculate-combined").addEventListener("click",(function(){try{let e,t,n=document.getElementById("combined-solve-for").value,l=parseFloat(document.getElementById("combined-P1").value),o=parseFloat(document.getElementById("combined-V1").value),s=parseFloat(document.getElementById("combined-T1").value),a=parseFloat(document.getElementById("combined-P2").value),r=parseFloat(document.getElementById("combined-V2").value),i=parseFloat(document.getElementById("combined-T2").value);if("P1"==n){if(isNaN(o)||isNaN(s)||isNaN(a)||isNaN(r)||isNaN(i))throw new Error("Please provide V<sub>1</sub>, T<sub>1</sub>, P<sub>2</sub>, V<sub>2</sub>, T<sub>2</sub>");e=a*r*s/(o*i),t="P<sub>1</sub>=(P<sub>2</sub> V<sub>2</sub> T<sub>1</sub>)/(V<sub>1</sub> T<sub>2</sub>)"}else if("V1"==n){if(isNaN(l)||isNaN(s)||isNaN(a)||isNaN(r)||isNaN(i))throw new Error("Please provide P<sub>1</sub>, T<sub>1</sub>, P<sub>2</sub>, V<sub>2</sub>, T<sub>2</sub>");e=a*r*s/(l*i),t="V<sub>1</sub>=(P<sub>2</sub> V<sub>2</sub> T<sub>1</sub>)/(P<sub>1</sub> T<sub>2</sub>)"}else if("T1"==n){if(isNaN(l)||isNaN(o)||isNaN(a)||isNaN(r)||isNaN(i))throw new Error("Please provide P<sub>1</sub>, V<sub>1</sub>, P<sub>2</sub>, V<sub>2</sub>, T<sub>2</sub>");e=l*o*i/(a*r),t="T<sub>1</sub>=(P<sub>1</sub> V<sub>1</sub> T<sub>2</sub>)/(P<sub>2</sub> V<sub>2</sub>)"}else if("P2"==n){if(isNaN(l)||isNaN(o)||isNaN(s)||isNaN(r)||isNaN(i))throw new Error("Please provide P<sub>1</sub>, V<sub>1</sub>, T<sub>1</sub>, V<sub>2</sub>, T<sub>2</sub>");e=l*o*i/(r*s),t="P<sub>2</sub>=(P<sub>1</sub> V<sub>1</sub> T<sub>2</sub>)/(V<sub>2</sub> T<sub>1</sub>)"}else if("V2"==n){if(isNaN(l)||isNaN(o)||isNaN(s)||isNaN(a)||isNaN(i))throw new Error("Please provide P<sub>1</sub>, V<sub>1</sub>, T<sub>1</sub>, P<sub>2</sub>, T<sub>2</sub>");e=l*o*i/(a*s),t="V<sub>2</sub>=(P<sub>1</sub> V<sub>1</sub> T<sub>2</sub>)/(P<sub>2</sub> T<sub>1</sub>)"}else if("T2"==n){if(isNaN(l)||isNaN(o)||isNaN(s)||isNaN(a)||isNaN(r))throw new Error("Please provide P<sub>1</sub>, V<sub>1</sub>, T<sub>1</sub>, P<sub>2</sub>, V<sub>2</sub>");e=a*r*s/(l*o),t="T<sub>2</sub>=(P<sub>2</sub> V<sub>2</sub> T<sub>1</sub>)/(P<sub>1</sub> V<sub>1</sub>)"}let u=n.includes("P")?"pressure units":n.includes("V")?"volume units":n.includes("T")?"K":"";document.getElementById("combined-result").innerHTML=`<p>${t}</p><p>Result: ${e.toFixed(4)} ${u}</p>`}catch(e){document.getElementById("combined-result").innerHTML=`<p>Error: ${e.message}</p>`}})),document.getElementById("calculate-vdw").addEventListener("click",(function(){try{let e=parseFloat(document.getElementById("vdw-V").value),t=parseFloat(document.getElementById("vdw-n").value),n=parseFloat(document.getElementById("vdw-T").value),l=parseFloat(document.getElementById("vdw-a").value),o=parseFloat(document.getElementById("vdw-b").value);if(isNaN(e)||isNaN(t)||isNaN(n)||isNaN(l)||isNaN(o))throw new Error("Please provide all inputs");let s=t*.0821*n/(e-t*o)-l*(t/e)**2;document.getElementById("vdw-result").innerHTML=`<p>P=${s.toFixed(4)} atm</p>`}catch(e){document.getElementById("vdw-result").innerHTML=`<p>Error: ${e.message}</p>`}})),document.getElementById("ideal-R-units").addEventListener("change",(function(){let e=this.value;"atm-L"==e?(document.getElementById("ideal-P").placeholder="P (atm)",document.getElementById("ideal-V").placeholder="V (L)"):"SI"==e&&(document.getElementById("ideal-P").placeholder="P (Pa)",document.getElementById("ideal-V").placeholder="V (m³)")})),document.getElementById("calculate-half-life").addEventListener("click",(function(){try{let e,t=document.getElementById("half-life-solve-for").value,n=parseFloat(document.getElementById("initial-quantity").value),l=parseFloat(document.getElementById("time-input").value),o=parseFloat(document.getElementById("half-life-input").value),s=parseFloat(document.getElementById("remaining-quantity").value);switch(t){case"remaining":if(isNaN(n)||isNaN(l)||isNaN(o))throw new Error("Missing inputs for initial quantity, time, or half-life");e=n*Math.pow(.5,l/o),document.getElementById("half-life-result").innerHTML=`<p>Remaining: ${e.toFixed(4)} (after ${l} units)</p>`;break;case"time":if(isNaN(n)||isNaN(o)||isNaN(s))throw new Error("Missing inputs for initial quantity, half-life, or remaining quantity");e=Math.log(s/n)/Math.log(.5)*o,document.getElementById("half-life-result").innerHTML=`<p>Time needed: ${e.toFixed(4)} units</p>`;break;case"half-life":if(isNaN(n)||isNaN(l)||isNaN(s))throw new Error("Missing inputs for initial quantity, time, or remaining quantity");e=l/(Math.log(s/n)/Math.log(.5)),document.getElementById("half-life-result").innerHTML=`<p>Half-life: ${e.toFixed(4)} units</p>`}}catch(e){document.getElementById("half-life-result").innerHTML=`<p>Error: ${e.message}</p>`}})),document.getElementById("half-life-solve-for").addEventListener("change",(function(){let e=this.value;document.getElementById("remaining-quantity-group").style.display="time"==e||"half-life"==e?"block":"none"})),document.getElementById("calculate-cell-potential").addEventListener("click",(function(){let e=parseFloat(document.getElementById("E1").value),t=parseFloat(document.getElementById("E2").value);if(isNaN(e)||isNaN(t))return void(document.getElementById("cell-potential-result").innerHTML="<p>Please enter valid numbers for both potentials.</p>");let n=Math.max(e,t),l=Math.min(e,t),o=`<p>The half-reaction with E°=${n} V is the cathode, and the one with E°=${l} V is the anode.</p><p>The standard cell potential E°_cell=${(n-l).toFixed(3)} V</p>`;document.getElementById("cell-potential-result").innerHTML=o})),document.getElementById("calculate-nernst").addEventListener("click",(function(){let e=parseFloat(document.getElementById("E-standard").value),n=parseFloat(document.getElementById("temperature").value),l=parseFloat(document.getElementById("n-electrons").value),o=parseFloat(document.getElementById("Q-reaction").value);if(isNaN(e)||isNaN(n)||isNaN(l)||isNaN(o)||n<=0||l<=0||o<=0)return void(document.getElementById("nernst-result").innerHTML="<p>Please enter valid positive numbers for all fields.</p>");let s=e-8.314*n/(l*t)*Math.log(o);document.getElementById("nernst-result").innerHTML=`<p>The cell potential E=${s.toFixed(3)} V</p>`})),document.getElementById("calculate-electrolysis").addEventListener("click",(function(){let e=document.getElementById("electrolysis-solve-for").value,n=parseFloat(document.getElementById("electrolysis-m").value),l=parseFloat(document.getElementById("electrolysis-I").value),o=parseFloat(document.getElementById("electrolysis-t").value),s=parseFloat(document.getElementById("electrolysis-z").value),a=parseFloat(document.getElementById("electrolysis-M").value);if("mass"==e&&(isNaN(l)||isNaN(o)||isNaN(s)||isNaN(a)||l<=0||o<=0||s<=0||a<=0))document.getElementById("electrolysis-result").innerHTML="<p>Please enter valid positive numbers for I, t, z, and M.</p>";else if("current"==e&&(isNaN(n)||isNaN(o)||isNaN(s)||isNaN(a)||n<=0||o<=0||s<=0||a<=0))document.getElementById("electrolysis-result").innerHTML="<p>Please enter valid positive numbers for m, t, z, and M.</p>";else if("time"==e&&(isNaN(n)||isNaN(l)||isNaN(s)||isNaN(a)||n<=0||l<=0||s<=0||a<=0))document.getElementById("electrolysis-result").innerHTML="<p>Please enter valid positive numbers for m, I, z, and M.</p>";else if("mass"==e){let e=l*o/(t*s)*a;document.getElementById("electrolysis-result").innerHTML=`<p>The mass deposited m=${e.toFixed(3)} g</p>`}else if("current"==e){let e=n/a*t*s/o;document.getElementById("electrolysis-result").innerHTML=`<p>The current I=${e.toFixed(3)} A</p>`}else if("time"==e){let e=n/a*t*s/l;document.getElementById("electrolysis-result").innerHTML=`<p>The time t=${e.toFixed(3)} s</p>`}})),document.getElementById("calculate-bond-type").addEventListener("click",(function(){try{let e=document.getElementById("element1-input").value.trim().toLowerCase(),t=document.getElementById("element2-input").value.trim().toLowerCase();if(!e||!t)throw new Error("Please enter both element symbols");let l=n.find((t=>t.symbol.toLowerCase()==e)),o=n.find((e=>e.symbol.toLowerCase()==t));if(!l||!o)throw new Error("One or both elements not found");let s=l.electronegativity,a=o.electronegativity;if(null==s||null==a)return void(document.getElementById("bond-type-result").innerHTML="<p>Bond impossible (not proven yet) due to yet unavailable electronegativity data</p>");let r,i=Math.abs(s-a).toFixed(2),u=l.type.toLowerCase(),d=o.type.toLowerCase(),m=u.includes("metal")&&"metalloid"!==u&&"non-metal"!==u,c=d.includes("metal")&&"metalloid"!==d&&"non-metal"!==d;r=m||c?m&&c?"Metallic":"Ionic":i>=1.7?"Ionic":i>=.4?"Polar Covalent":"Nonpolar Covalent";let p=`<p>${l.symbol} (${s}) and ${o.symbol} (${a}) -> ΔEN=${i} -> ${r} bond</p>`;document.getElementById("bond-type-result").innerHTML=p}catch(e){document.getElementById("bond-type-result").innerHTML=`<p>Error: ${e.message}</p>`}}))})).catch((e=>{console.error("Error fetching data:",e),document.getElementById("element-info").innerHTML="<p>Error loading element data table</p>"}))}));